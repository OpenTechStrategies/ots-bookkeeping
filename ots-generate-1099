#!/bin/sh

# Fill out an OTS contractor's 1099 form for a given tax year,
# by driving the 'fill-1099' script.  Usage:
#
#   ./generate-1099 "2020"                    \
#                   "Jane Random"             \
#                   "1234 Main Street, #5"    \
#                   "Springfield, ND  12345"  \
#                   "5000.00"                 \
#
# Copyright (c) 2020, 2021 Open Tech Strategies, LLC
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
# 
# If you did not receive a copy of the GNU General Public License
# along with this program, see <http://www.gnu.org/licenses/>.

TAX_YEAR="${1}"
PAYEE="${2}"
# Ideally we would parse address information from some fixed-format
# file in personnel/FIRST_LAST, and just pass FIRST_LAST instead of
# all these separate PAYEE* arguments.  But one thing at a time.
PAYEE_ADDR_STREET="${3}"
PAYEE_ADDR_LOCATION="${4}"
AMOUNT="${5}"

# Transform "Jane Random" into "Jane_Random".
# This should usually work.  If it ever doesn't, we'll fix it.
PERSONNEL_NAME=`echo "${PAYEE}" | sed -e "s/ /_/"`

# Transform "Jane Random" into "jane-random".
OUTPUT_NAME=`echo "${PAYEE}" | sed -e "s/ /-/" | awk '{print tolower($0)}'`

FILL_1099=${OTS_BOOKKEEPING_DIR}/fill-1099

grep -A4 '* Open Tech Strategies, LLC' ${OTS_DIR}/org/crm.org  \
  | sed -E 's/^[ *][ *]//'                                    \
  > $$-ots-address.txt

# https://www.irs.gov/pub/irs-pdf/f1099msc.pdf is the most recent
# form at all times, but we want the form for a specific year.
if [ ! -f f1099msc--${TAX_YEAR}.pdf ]; then
  wget https://www.irs.gov/pub/irs-prior/f1099msc--${TAX_YEAR}.pdf
fi

OUTPUT_FILE="${OUTPUT_NAME}-${TAX_YEAR}-form-1099.pdf"

# There's surely some better way to do this.
TID=`opass show personnel/${PERSONNEL_NAME}/secrets | grep "taxpayer_id: " | cut -d ":" -f 2 | awk '{$1=$1};1'`

# Some people do business under an entity name.  As long as we store
# their information under their personal name in opass, with an
# "entity:" subentry under "w9", then this kluge will usually work.
# And is that requirement, to store this information under the
# person's overall opass entry rather than under an opass entry for
# the entity, documented anywhere?  Why, no, of course not.  Except here.
ENTITY_NAME=`opass show personnel/${PERSONNEL_NAME}/secrets | grep "entity: " | cut -d ":" -f 2 | awk '{$1=$1};1'`
if [ "${ENTITY_NAME}" ]; then
  PAYEE="${ENTITY_NAME}"
fi

rm -f ${OUTPUT_FILE}

${FILL_1099}                                             \
    --payee-name="${PAYEE}"                              \
    --payee-street-address="${PAYEE_ADDR_STREET}"        \
    --payee-location="${PAYEE_ADDR_LOCATION}"            \
    --payee-tid="${TID}"                                 \
    --amount="${AMOUNT}"                                 \
    --payer-ein="27-3485318"                             \
    --payer-address-file=$$-ots-address.txt              \
    --output-file=${OUTPUT_FILE}                         \
    f1099msc--${TAX_YEAR}.pdf

rm $$-ots-address.txt
evince ${OUTPUT_FILE} &
