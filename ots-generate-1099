#!/bin/sh

# Fill out an OTS contractor's 1099 form for a given tax year,
# by driving the 'fill-1099' script.  Usage:
#
#   ./generate-1099 "2020"                    \
#                   "Jane Random"             \
#                   "1234 Main Street, #5"    \
#                   "Springfield, ND  12345"  \
#                   "5000.00"                 \
#
# Copyright (c) 2020, 2021 Open Tech Strategies, LLC
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# If you did not receive a copy of the GNU General Public License
# along with this program, see <http://www.gnu.org/licenses/>.

set -e

######################### Arguments #######################

# YYYY format, obviously.
TAX_YEAR="${1}"

# What we call them -- their entry name in opass, but without
# underscores.  E.g., "Kim Random", or "You Wouldnt Download an LLC".
# (If they use some different name for their tax forms, we'll get
# that from the "taxpayer_name" field in their opass file later.)
PAYEE="${2}"

# Ideally we would parse address information from some fixed-format
# file in personnel/FIRST_LAST, and just pass FIRST_LAST instead of
# all these separate PAYEE* arguments.  But this works well enough.
ADDR_STREET="${3}"
ADDR_LOCATION="${4}"

# Just a number with two places after the decimal point.  No dollar sign.
AMOUNT="${5}"

######################### End Arguments #######################

# Transform "Jane Random" into "Jane_Random".
# This should usually work.  If it ever doesn't, we'll fix it.
PERSONNEL_NAME=`echo "${PAYEE}" | sed -e "s/ /_/g"`

# Transform "Jane Random" into "jane-random".
OUTPUT_NAME=`echo "${PAYEE}" | sed -e "s/ /-/g" | awk '{print tolower($0)}'`

FILL_1099=${OTS_BOOKKEEPING_DIR}/fill-1099

grep -A4 '* Open Tech Strategies, LLC' ${OTS_DIR}/org/crm.org  \
  | sed -E 's/^[ *][ *]//'                                    \
  > $$-ots-address.txt

# https://www.irs.gov/pub/irs-pdf/f1099msc.pdf is the most recent
# form at all times, but we want the form for a specific year.
if [ ! -f f1099msc--${TAX_YEAR}.pdf ]; then
  wget https://www.irs.gov/pub/irs-prior/f1099msc--${TAX_YEAR}.pdf
fi

OUTPUT_FILE="${OUTPUT_NAME}-${TAX_YEAR}-form-1099.pdf"

# There's surely some better way to do this.
TID=`opass show personnel/"${PERSONNEL_NAME}"/secrets | grep "taxpayer_id: " | cut -d ":" -f 2 | awk '{$1=$1};1'`

# Some people use a different name for tax purposes -- either a more
# formal/bureaucratic version of their own name (e.g., "EMi Spicer"
# becomes "Emily Spicer", or "Greg Back" becomes "Gregory T Back"), or
# sometimes a business entity name.  So if ${PAYEE} isn't what we
# should use for that, then whatever we *should* use will be in the 
# "taxpayer_name:" subentry under "w9" in personnel/${PAYEE}/secrets
# (replace spaces with underscores in ${PAYEE} when calculating the
# opass path, of course).
TAXPAYER_NAME=`opass show personnel/"${PERSONNEL_NAME}"/secrets | grep "taxpayer_name: " | cut -d ":" -f 2 | awk '{$1=$1};1'`
if [ "${TAXPAYER_NAME}" = "" ]; then
  TAXPAYER_NAME="${PAYEE}"
fi

rm -f "${OUTPUT_FILE}"

${FILL_1099}                                             \
    --payee-name="${TAXPAYER_NAME}"                      \
    --payee-street-address="${ADDR_STREET}"              \
    --payee-location="${ADDR_LOCATION}"                  \
    --payee-tid="${TID}"                                 \
    --amount="${AMOUNT}"                                 \
    --payer-ein="27-3485318"                             \
    --payer-address-file=$$-ots-address.txt              \
    --output-file=${OUTPUT_FILE}                         \
    f1099msc--${TAX_YEAR}.pdf

rm $$-ots-address.txt
if [ -f "${OUTPUT_FILE}" ]; then
    evince "${OUTPUT_FILE}" &
else
    echo "Something went wrong.  ${OUTPUT_FILE} wasn't created."
fi
